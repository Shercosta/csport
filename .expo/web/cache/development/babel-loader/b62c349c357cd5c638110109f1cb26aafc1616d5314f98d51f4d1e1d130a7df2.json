{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from \"react\";\nimport ListItem from \"./ListItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Todo = function Todo() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskList = _useState4[0],\n    setTaskList = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    completedTasks = _useState6[0],\n    setCompletedTasks = _useState6[1];\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    task.length > 0 && setTaskList([].concat(_toConsumableArray(taskList), [task]));\n    setTask(\"\");\n  };\n  var onTaskComplete = function onTaskComplete(index) {\n    var completeTemp = _toConsumableArray(completedTasks);\n    var itemsCopy = _toConsumableArray(taskList);\n    var completedTask = itemsCopy.splice(index, 1);\n    if (completedTask.length > 0) {\n      completeTemp.push(completedTask[0]);\n    }\n    setTaskList(itemsCopy);\n    setCompletedTasks(completeTemp);\n  };\n  var deleteTask = function deleteTask(index, isComplete) {\n    if (isComplete) {\n      var itemsCopy = _toConsumableArray(completedTasks);\n      itemsCopy.splice(index, 1);\n      setCompletedTasks(itemsCopy);\n    } else {\n      var _itemsCopy = _toConsumableArray(taskList);\n      _itemsCopy.splice(index, 1);\n      setTaskList(_itemsCopy);\n    }\n  };\n  var ListElement = function ListElement(index, item) {\n    var isComplete = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return _jsx(ListItem, {\n      text: item,\n      onCheckboxSelect: function onCheckboxSelect() {\n        return onTaskComplete(index);\n      },\n      onDeleteTask: function onDeleteTask() {\n        return deleteTask(index, isComplete);\n      },\n      selected: !taskList.includes(item)\n    }, index);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1\n      },\n      keyboardShouldPersistTaps: \"handled\",\n      children: _jsxs(View, {\n        style: styles.tasksWrapper,\n        children: [_jsx(Text, {\n          style: styles.sectionTitle,\n          children: \"My tasks\"\n        }), _jsx(View, {\n          style: styles.items,\n          children: taskList.map(function (item, index) {\n            return ListElement(index, item);\n          })\n        }), completedTasks.length > 0 && _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Completed tasks\"\n          }), _jsx(View, {\n            style: styles.items,\n            children: completedTasks.map(function (item, index) {\n              return ListElement(index, item, true);\n            })\n          })]\n        })]\n      })\n    }), _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: styles.writeTaskWrapper,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Tasks to do\",\n        value: task,\n        onChangeText: function onChangeText(text) {\n          return setTask(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleAddTask();\n        },\n        children: _jsx(View, {\n          style: styles.addWrapper,\n          children: _jsx(Text, {\n            style: styles.addText,\n            children: \"+\"\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E8EAED\"\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    position: \"absolute\",\n    bottom: 60,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: \"#fff\",\n    borderRadius: 60,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#C0C0C0\",\n    borderWidth: 1\n  },\n  addText: {}\n});\nexport default Todo;","map":{"version":3,"names":["React","useState","ListItem","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Todo","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","taskList","setTaskList","_useState5","_useState6","completedTasks","setCompletedTasks","handleAddTask","Keyboard","dismiss","length","concat","_toConsumableArray","onTaskComplete","index","completeTemp","itemsCopy","completedTask","splice","push","deleteTask","isComplete","ListElement","item","arguments","undefined","text","onCheckboxSelect","onDeleteTask","selected","includes","View","style","styles","container","children","ScrollView","contentContainerStyle","flexGrow","keyboardShouldPersistTaps","tasksWrapper","Text","sectionTitle","items","map","KeyboardAvoidingView","behavior","Platform","OS","writeTaskWrapper","TextInput","input","placeholder","value","onChangeText","TouchableOpacity","onPress","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"sources":["D:/BAD/ITERA/KULIAH/PRODI/Semester 6/PAM/TUBES/csport/src/Todo/todo.js"],"sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst Todo = () => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n\r\n  // Addding items to list\r\n  const handleAddTask = () => {\r\n    Keyboard.dismiss();\r\n    task.length > 0 && setTaskList([...taskList, task]);\r\n    setTask(\"\");\r\n  };\r\n\r\n  const onTaskComplete = (index) => {\r\n    let completeTemp = [...completedTasks];\r\n    let itemsCopy = [...taskList];\r\n    let completedTask = itemsCopy.splice(index, 1); // Delete item from the list\r\n\r\n    if (completedTask.length > 0) {\r\n      completeTemp.push(completedTask[0]); // Adding item to completed list\r\n    }\r\n    setTaskList(itemsCopy);\r\n    setCompletedTasks(completeTemp);\r\n  };\r\n\r\n  const deleteTask = (index, isComplete) => {\r\n    if (isComplete) {\r\n      let itemsCopy = [...completedTasks];\r\n      itemsCopy.splice(index, 1);\r\n      setCompletedTasks(itemsCopy);\r\n    } else {\r\n      let itemsCopy = [...taskList];\r\n      itemsCopy.splice(index, 1);\r\n      setTaskList(itemsCopy);\r\n    }\r\n  };\r\n\r\n  const ListElement = (index, item, isComplete = false) => (\r\n    <ListItem\r\n      key={index}\r\n      text={item}\r\n      onCheckboxSelect={() => onTaskComplete(index)}\r\n      onDeleteTask={() => deleteTask(index, isComplete)}\r\n      selected={!taskList.includes(item)}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView\r\n        contentContainerStyle={{\r\n          flexGrow: 1,\r\n        }}\r\n        keyboardShouldPersistTaps=\"handled\"\r\n      >\r\n        <View style={styles.tasksWrapper}>\r\n          <Text style={styles.sectionTitle}>My tasks</Text>\r\n          <View style={styles.items}>\r\n            {taskList.map((item, index) => ListElement(index, item))}\r\n          </View>\r\n          {completedTasks.length > 0 && (\r\n            <>\r\n              <Text style={styles.sectionTitle}>Completed tasks</Text>\r\n              <View style={styles.items}>\r\n                {completedTasks.map((item, index) =>\r\n                  ListElement(index, item, true)\r\n                )}\r\n              </View>\r\n            </>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Write a task */}\r\n      \r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.writeTaskWrapper}\r\n      >\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder={\"Tasks to do\"}\r\n          value={task}\r\n          onChangeText={(text) => setTask(text)}\r\n        />\r\n        <TouchableOpacity onPress={() => handleAddTask()}>\r\n          <View style={styles.addWrapper}>\r\n            <Text style={styles.addText}>+</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#E8EAED\",\r\n  },\r\n  tasksWrapper: {\r\n    paddingTop: 80,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  items: {\r\n    marginTop: 30,\r\n  },\r\n  writeTaskWrapper: {\r\n    position: \"absolute\",\r\n    bottom: 60,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 60,\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    width: 250,\r\n  },\r\n  addWrapper: {\r\n    width: 60,\r\n    height: 60,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n  },\r\n  addText: {},\r\n});\r\n\r\nexport default Todo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}